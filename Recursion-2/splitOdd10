// Given an array of ints, is it possible to divide the ints into two groups,
// so that the sum of one group is a multiple of 10, and the sum of the other 
// group is odd. Every int must be in one group or the other. Write a recursive 
// helper method that takes whatever arguments you like, and make the initial 
// call to your recursive helper from splitOdd10(). (No loops needed.)
public boolean splitOdd10(int[] nums) 
{
  int len = nums.length;
  
  if (len == 0)
    return false;
  else 
    return groupSum(0, nums, 0, 10);
}

public boolean groupSum(int start, int[] nums, int sum, int modNum) 
{  
  int len = nums.length;
  if (start >= len) // base case
  {
    int totalSum = 0;
    for (int i = 0; i < len; i++)
      totalSum += nums[i];
    return sum % modNum == 0 && (totalSum - sum) % 2 == 1;
  }
  else
  {
    return groupSum(start+1, nums, sum + nums[start], modNum) || 
           groupSum(start+1, nums, sum, modNum);
  }
}
