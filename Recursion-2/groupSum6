// Given an array of ints, is it possible to choose a group of some of the ints, 
// beginning at the start index, such that the group sums to the given target? 
// However, with the additional constraint that all 6's must be chosen. (No loops needed.)
public boolean groupSum6(int start, int[] nums, int target)
{
  int len = nums.length;
  if (start >= len) // base case
    return target == 0;
  else
  {
    if (nums[start] == 6)
      return groupSum6(start+1, nums, target - nums[start]);
    else 
      return groupSum6(start+1, nums, target - nums[start]) || 
             groupSum6(start+1, nums, target);
  }
}
