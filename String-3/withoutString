// Given two strings, base and remove, return a version of the base string where all 
// instances of the remove string have been removed (not case sensitive). You may 
// assume that the remove string is length 1 or more. Remove only non-overlapping 
// instances, so with "xxx" removing "xx" leaves "x".
public String withoutString(String base, String remove) 
{
  int baseLen = base.length();
  int removeLen = remove.length();
  
  assert removeLen >= 1;
  String result = "";
  
  int i = 0;
  while (i < baseLen-removeLen+1)
  {
    String subStr = base.substring(i,i+removeLen);
    if (!subStr.equalsIgnoreCase(remove))
    {
      if (i == baseLen-removeLen) // last loop 
        result = result + base.substring(i);  // add the rest of base string
      else
        result = result + base.charAt(i);
      i++;
    }
    else  // When remove is found
    {
      i = i + removeLen;  // Skip to the next character
      if (i > baseLen-removeLen)  // Next character index is beyond loop's scope
        while (i != baseLen)
        {
          result = result + base.charAt(i);
          i++;
        }
    }
  }
  return result;
}
